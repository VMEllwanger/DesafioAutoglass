// <auto-generated />
using System;
using DesafioAutoglass.Produtos.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DesafioAutoglass.Produtos.Data.Migrations
{
    [DbContext(typeof(ProdutoContext))]
    [Migration("20240318211105_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.HasSequence<int>("SequenciaCodigoFornecedor")
                .StartsAt(1000L);

            modelBuilder.HasSequence<int>("SequenciaCodigoProdutos")
                .StartsAt(1000L);

            modelBuilder.Entity("DesafioAutoglass.Produtos.Domain.Entidade.Fornecedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("varchar(18)");

                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequenciaCodigoFornecedor");

                    b.Property<DateTime>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("Date")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Fornecedores");

                    b.HasData(
                        new
                        {
                            Id = new Guid("de5f43de-21d0-4b88-ac0a-0ab368d2f8aa"),
                            CNPJ = "60585144000189",
                            Codigo = 0,
                            DataCadastro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Emporio10 ME"
                        },
                        new
                        {
                            Id = new Guid("3f4e05ba-a16a-4232-98e6-b6f89575f58a"),
                            CNPJ = "69223161000140",
                            Codigo = 0,
                            DataCadastro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Pães e Doces Ltda"
                        },
                        new
                        {
                            Id = new Guid("96f1fb45-3e72-4f42-8032-0f9441e6f5db"),
                            CNPJ = "49526608000143",
                            Codigo = 0,
                            DataCadastro = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Massa e Borda Pizzaria ME"
                        });
                });

            modelBuilder.Entity("DesafioAutoglass.Produtos.Domain.Entidade.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR SequenciaCodigoProdutos");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeFabricacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataDeValidade")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("DesafioAutoglass.Produtos.Domain.Entidade.Produto", b =>
                {
                    b.HasOne("DesafioAutoglass.Produtos.Domain.Entidade.Fornecedor", "Fornecedor")
                        .WithMany("Produtos")
                        .HasForeignKey("FornecedorId")
                        .IsRequired();

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("DesafioAutoglass.Produtos.Domain.Entidade.Fornecedor", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
